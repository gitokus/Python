# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(376, 600)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icon/res/icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStatusTip("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStatusTip("")
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(3, 3, 3, 3)
        self.verticalLayout.setSpacing(3)
        self.verticalLayout.setObjectName("verticalLayout")
        self.toolsStackWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.toolsStackWidget.setStatusTip("")
        self.toolsStackWidget.setObjectName("toolsStackWidget")
        self.home = QtWidgets.QWidget()
        self.home.setObjectName("home")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.home)
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem = QtWidgets.QSpacerItem(331, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem1)
        self.createProjectBtn = QtWidgets.QPushButton(self.home)
        self.createProjectBtn.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.createProjectBtn.setObjectName("createProjectBtn")
        self.verticalLayout_2.addWidget(self.createProjectBtn)
        self.openProjectBtn = QtWidgets.QPushButton(self.home)
        self.openProjectBtn.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.openProjectBtn.setObjectName("openProjectBtn")
        self.verticalLayout_2.addWidget(self.openProjectBtn)
        self.noProjectBtn = QtWidgets.QPushButton(self.home)
        self.noProjectBtn.setObjectName("noProjectBtn")
        self.verticalLayout_2.addWidget(self.noProjectBtn)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem2)
        self.horizontalLayout.addLayout(self.verticalLayout_2)
        spacerItem3 = QtWidgets.QSpacerItem(330, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem3)
        self.toolsStackWidget.addWidget(self.home)
        self.blank = QtWidgets.QWidget()
        self.blank.setObjectName("blank")
        self.toolsStackWidget.addWidget(self.blank)
        self.tool1 = QtWidgets.QWidget()
        self.tool1.setObjectName("tool1")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.tool1)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.groupBox_3 = QtWidgets.QGroupBox(self.tool1)
        self.groupBox_3.setObjectName("groupBox_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.groupBox_3)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.ff_rootEdit = QtWidgets.QLineEdit(self.groupBox_3)
        self.ff_rootEdit.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ff_rootEdit.setText("")
        self.ff_rootEdit.setReadOnly(True)
        self.ff_rootEdit.setObjectName("ff_rootEdit")
        self.horizontalLayout_2.addWidget(self.ff_rootEdit)
        self.ff_rootBtn = QtWidgets.QPushButton(self.groupBox_3)
        self.ff_rootBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ff_rootBtn.setObjectName("ff_rootBtn")
        self.horizontalLayout_2.addWidget(self.ff_rootBtn)
        self.verticalLayout_3.addLayout(self.horizontalLayout_2)
        self.verticalLayout_5.addWidget(self.groupBox_3)
        self.groupBox_2 = QtWidgets.QGroupBox(self.tool1)
        self.groupBox_2.setObjectName("groupBox_2")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.groupBox_2)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.ff_logsEdit = QtWidgets.QPlainTextEdit(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ff_logsEdit.sizePolicy().hasHeightForWidth())
        self.ff_logsEdit.setSizePolicy(sizePolicy)
        self.ff_logsEdit.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ff_logsEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.ff_logsEdit.setPlainText("")
        self.ff_logsEdit.setBackgroundVisible(True)
        self.ff_logsEdit.setCenterOnScroll(False)
        self.ff_logsEdit.setObjectName("ff_logsEdit")
        self.horizontalLayout_7.addWidget(self.ff_logsEdit)
        self.verticalLayout_5.addWidget(self.groupBox_2)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem4)
        self.ff_historyCheckBox = QtWidgets.QCheckBox(self.tool1)
        self.ff_historyCheckBox.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ff_historyCheckBox.setObjectName("ff_historyCheckBox")
        self.horizontalLayout_6.addWidget(self.ff_historyCheckBox)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem5)
        self.ff_historyBox = QtWidgets.QSpinBox(self.tool1)
        self.ff_historyBox.setEnabled(False)
        self.ff_historyBox.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ff_historyBox.setMinimum(1)
        self.ff_historyBox.setProperty("value", 1)
        self.ff_historyBox.setObjectName("ff_historyBox")
        self.horizontalLayout_6.addWidget(self.ff_historyBox)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem6)
        self.verticalLayout_5.addLayout(self.horizontalLayout_6)
        self.groupBox = QtWidgets.QGroupBox(self.tool1)
        self.groupBox.setObjectName("groupBox")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.groupBox)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.ff_outputRadioBtn_1 = QtWidgets.QRadioButton(self.groupBox)
        self.ff_outputRadioBtn_1.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ff_outputRadioBtn_1.setChecked(True)
        self.ff_outputRadioBtn_1.setObjectName("ff_outputRadioBtn_1")
        self.verticalLayout_4.addWidget(self.ff_outputRadioBtn_1)
        self.ff_outputRadioBtn_2 = QtWidgets.QRadioButton(self.groupBox)
        self.ff_outputRadioBtn_2.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ff_outputRadioBtn_2.setChecked(False)
        self.ff_outputRadioBtn_2.setObjectName("ff_outputRadioBtn_2")
        self.verticalLayout_4.addWidget(self.ff_outputRadioBtn_2)
        self.horizontalLayout_3.addLayout(self.verticalLayout_4)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.ff_outputEdit = QtWidgets.QLineEdit(self.groupBox)
        self.ff_outputEdit.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ff_outputEdit.setText("")
        self.ff_outputEdit.setReadOnly(True)
        self.ff_outputEdit.setObjectName("ff_outputEdit")
        self.horizontalLayout_4.addWidget(self.ff_outputEdit)
        self.ff_outputBtn = QtWidgets.QPushButton(self.groupBox)
        self.ff_outputBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ff_outputBtn.setObjectName("ff_outputBtn")
        self.horizontalLayout_4.addWidget(self.ff_outputBtn)
        self.horizontalLayout_3.addLayout(self.horizontalLayout_4)
        self.verticalLayout_5.addWidget(self.groupBox)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem7)
        self.ff_searchBtn = QtWidgets.QPushButton(self.tool1)
        self.ff_searchBtn.setMinimumSize(QtCore.QSize(300, 40))
        self.ff_searchBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ff_searchBtn.setObjectName("ff_searchBtn")
        self.horizontalLayout_5.addWidget(self.ff_searchBtn)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem8)
        self.verticalLayout_5.addLayout(self.horizontalLayout_5)
        self.verticalLayout_5.setStretch(1, 1)
        self.toolsStackWidget.addWidget(self.tool1)
        self.tool2 = QtWidgets.QWidget()
        self.tool2.setObjectName("tool2")
        self.verticalLayout_29 = QtWidgets.QVBoxLayout(self.tool2)
        self.verticalLayout_29.setObjectName("verticalLayout_29")
        self.groupBox_12 = QtWidgets.QGroupBox(self.tool2)
        self.groupBox_12.setObjectName("groupBox_12")
        self.verticalLayout_30 = QtWidgets.QVBoxLayout(self.groupBox_12)
        self.verticalLayout_30.setObjectName("verticalLayout_30")
        self.horizontalLayout_30 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_30.setObjectName("horizontalLayout_30")
        self.ar_exeEdit = QtWidgets.QLineEdit(self.groupBox_12)
        self.ar_exeEdit.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ar_exeEdit.setText("")
        self.ar_exeEdit.setReadOnly(True)
        self.ar_exeEdit.setObjectName("ar_exeEdit")
        self.horizontalLayout_30.addWidget(self.ar_exeEdit)
        self.ar_exeBtn = QtWidgets.QPushButton(self.groupBox_12)
        self.ar_exeBtn.setMinimumSize(QtCore.QSize(100, 0))
        self.ar_exeBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ar_exeBtn.setObjectName("ar_exeBtn")
        self.horizontalLayout_30.addWidget(self.ar_exeBtn)
        self.verticalLayout_30.addLayout(self.horizontalLayout_30)
        self.horizontalLayout_29 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_29.setObjectName("horizontalLayout_29")
        self.ar_inputEdit = QtWidgets.QLineEdit(self.groupBox_12)
        self.ar_inputEdit.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ar_inputEdit.setText("")
        self.ar_inputEdit.setReadOnly(True)
        self.ar_inputEdit.setObjectName("ar_inputEdit")
        self.horizontalLayout_29.addWidget(self.ar_inputEdit)
        self.ar_inputBtn = QtWidgets.QPushButton(self.groupBox_12)
        self.ar_inputBtn.setMinimumSize(QtCore.QSize(100, 0))
        self.ar_inputBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ar_inputBtn.setObjectName("ar_inputBtn")
        self.horizontalLayout_29.addWidget(self.ar_inputBtn)
        self.verticalLayout_30.addLayout(self.horizontalLayout_29)
        self.horizontalLayout_33 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_33.setObjectName("horizontalLayout_33")
        self.ar_mmrCheckBox = QtWidgets.QCheckBox(self.groupBox_12)
        self.ar_mmrCheckBox.setMinimumSize(QtCore.QSize(98, 0))
        self.ar_mmrCheckBox.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ar_mmrCheckBox.setToolTip("")
        self.ar_mmrCheckBox.setObjectName("ar_mmrCheckBox")
        self.horizontalLayout_33.addWidget(self.ar_mmrCheckBox)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_33.addItem(spacerItem9)
        self.ar_folderRadio = QtWidgets.QRadioButton(self.groupBox_12)
        self.ar_folderRadio.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ar_folderRadio.setChecked(True)
        self.ar_folderRadio.setObjectName("ar_folderRadio")
        self.horizontalLayout_33.addWidget(self.ar_folderRadio)
        self.ar_fileRadio = QtWidgets.QRadioButton(self.groupBox_12)
        self.ar_fileRadio.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ar_fileRadio.setObjectName("ar_fileRadio")
        self.horizontalLayout_33.addWidget(self.ar_fileRadio)
        self.verticalLayout_30.addLayout(self.horizontalLayout_33)
        self.verticalLayout_29.addWidget(self.groupBox_12)
        self.groupBox_13 = QtWidgets.QGroupBox(self.tool2)
        self.groupBox_13.setObjectName("groupBox_13")
        self.verticalLayout_31 = QtWidgets.QVBoxLayout(self.groupBox_13)
        self.verticalLayout_31.setObjectName("verticalLayout_31")
        self.ar_logsList = QtWidgets.QListWidget(self.groupBox_13)
        self.ar_logsList.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ar_logsList.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.ar_logsList.setObjectName("ar_logsList")
        self.verticalLayout_31.addWidget(self.ar_logsList)
        self.verticalLayout_29.addWidget(self.groupBox_13)
        self.horizontalLayout_31 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_31.setObjectName("horizontalLayout_31")
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_31.addItem(spacerItem10)
        self.ar_historyCheckBox = QtWidgets.QCheckBox(self.tool2)
        self.ar_historyCheckBox.setEnabled(False)
        self.ar_historyCheckBox.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ar_historyCheckBox.setObjectName("ar_historyCheckBox")
        self.horizontalLayout_31.addWidget(self.ar_historyCheckBox)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_31.addItem(spacerItem11)
        self.ar_historySpinBox = QtWidgets.QSpinBox(self.tool2)
        self.ar_historySpinBox.setEnabled(False)
        self.ar_historySpinBox.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ar_historySpinBox.setMinimum(1)
        self.ar_historySpinBox.setProperty("value", 1)
        self.ar_historySpinBox.setObjectName("ar_historySpinBox")
        self.horizontalLayout_31.addWidget(self.ar_historySpinBox)
        spacerItem12 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_31.addItem(spacerItem12)
        self.verticalLayout_29.addLayout(self.horizontalLayout_31)
        self.groupBox_14 = QtWidgets.QGroupBox(self.tool2)
        self.groupBox_14.setObjectName("groupBox_14")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.groupBox_14)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.ar_paramsEdit = QtWidgets.QLineEdit(self.groupBox_14)
        self.ar_paramsEdit.setEnabled(True)
        self.ar_paramsEdit.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ar_paramsEdit.setReadOnly(False)
        self.ar_paramsEdit.setObjectName("ar_paramsEdit")
        self.horizontalLayout_8.addWidget(self.ar_paramsEdit)
        self.ar_outDirBox = QtWidgets.QCheckBox(self.groupBox_14)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ar_outDirBox.sizePolicy().hasHeightForWidth())
        self.ar_outDirBox.setSizePolicy(sizePolicy)
        self.ar_outDirBox.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ar_outDirBox.setObjectName("ar_outDirBox")
        self.horizontalLayout_8.addWidget(self.ar_outDirBox)
        self.verticalLayout_29.addWidget(self.groupBox_14)
        self.horizontalLayout_34 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_34.setObjectName("horizontalLayout_34")
        spacerItem13 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_34.addItem(spacerItem13)
        self.ar_runBtn = QtWidgets.QPushButton(self.tool2)
        self.ar_runBtn.setMinimumSize(QtCore.QSize(300, 40))
        self.ar_runBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ar_runBtn.setObjectName("ar_runBtn")
        self.horizontalLayout_34.addWidget(self.ar_runBtn)
        spacerItem14 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_34.addItem(spacerItem14)
        self.verticalLayout_29.addLayout(self.horizontalLayout_34)
        self.verticalLayout_29.setStretch(1, 1)
        self.toolsStackWidget.addWidget(self.tool2)
        self.tool3 = QtWidgets.QWidget()
        self.tool3.setObjectName("tool3")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.tool3)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.groupBox_15 = QtWidgets.QGroupBox(self.tool3)
        self.groupBox_15.setObjectName("groupBox_15")
        self.verticalLayout_32 = QtWidgets.QVBoxLayout(self.groupBox_15)
        self.verticalLayout_32.setObjectName("verticalLayout_32")
        self.horizontalLayout_35 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_35.setObjectName("horizontalLayout_35")
        self.ef_inputEdit = QtWidgets.QLineEdit(self.groupBox_15)
        self.ef_inputEdit.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ef_inputEdit.setText("")
        self.ef_inputEdit.setReadOnly(True)
        self.ef_inputEdit.setObjectName("ef_inputEdit")
        self.horizontalLayout_35.addWidget(self.ef_inputEdit)
        self.ef_inputBtn = QtWidgets.QPushButton(self.groupBox_15)
        self.ef_inputBtn.setMinimumSize(QtCore.QSize(100, 0))
        self.ef_inputBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ef_inputBtn.setObjectName("ef_inputBtn")
        self.horizontalLayout_35.addWidget(self.ef_inputBtn)
        self.verticalLayout_32.addLayout(self.horizontalLayout_35)
        self.horizontalLayout_36 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_36.setObjectName("horizontalLayout_36")
        spacerItem15 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_36.addItem(spacerItem15)
        self.ef_folderRadio = QtWidgets.QRadioButton(self.groupBox_15)
        self.ef_folderRadio.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ef_folderRadio.setChecked(True)
        self.ef_folderRadio.setObjectName("ef_folderRadio")
        self.horizontalLayout_36.addWidget(self.ef_folderRadio)
        self.ef_fileRadio = QtWidgets.QRadioButton(self.groupBox_15)
        self.ef_fileRadio.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ef_fileRadio.setObjectName("ef_fileRadio")
        self.horizontalLayout_36.addWidget(self.ef_fileRadio)
        self.verticalLayout_32.addLayout(self.horizontalLayout_36)
        self.verticalLayout_6.addWidget(self.groupBox_15)
        self.groupBox_16 = QtWidgets.QGroupBox(self.tool3)
        self.groupBox_16.setObjectName("groupBox_16")
        self.verticalLayout_33 = QtWidgets.QVBoxLayout(self.groupBox_16)
        self.verticalLayout_33.setObjectName("verticalLayout_33")
        self.ef_matList = QtWidgets.QListWidget(self.groupBox_16)
        self.ef_matList.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ef_matList.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.ef_matList.setObjectName("ef_matList")
        self.verticalLayout_33.addWidget(self.ef_matList)
        self.verticalLayout_6.addWidget(self.groupBox_16)
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        spacerItem16 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_12.addItem(spacerItem16)
        self.ef_configBtn = QtWidgets.QPushButton(self.tool3)
        self.ef_configBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ef_configBtn.setToolTip("")
        self.ef_configBtn.setObjectName("ef_configBtn")
        self.horizontalLayout_12.addWidget(self.ef_configBtn)
        self.verticalLayout_6.addLayout(self.horizontalLayout_12)
        self.horizontalLayout_37 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_37.setObjectName("horizontalLayout_37")
        spacerItem17 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_37.addItem(spacerItem17)
        self.ef_runBtn = QtWidgets.QPushButton(self.tool3)
        self.ef_runBtn.setMinimumSize(QtCore.QSize(300, 40))
        self.ef_runBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.ef_runBtn.setObjectName("ef_runBtn")
        self.horizontalLayout_37.addWidget(self.ef_runBtn)
        spacerItem18 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_37.addItem(spacerItem18)
        self.verticalLayout_6.addLayout(self.horizontalLayout_37)
        self.verticalLayout_6.setStretch(1, 1)
        self.toolsStackWidget.addWidget(self.tool3)
        self.tool4 = QtWidgets.QWidget()
        self.tool4.setObjectName("tool4")
        self.verticalLayout_15 = QtWidgets.QVBoxLayout(self.tool4)
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.splitter_2 = QtWidgets.QSplitter(self.tool4)
        self.splitter_2.setOrientation(QtCore.Qt.Vertical)
        self.splitter_2.setObjectName("splitter_2")
        self.groupBox_4 = QtWidgets.QGroupBox(self.splitter_2)
        self.groupBox_4.setObjectName("groupBox_4")
        self.verticalLayout_16 = QtWidgets.QVBoxLayout(self.groupBox_4)
        self.verticalLayout_16.setObjectName("verticalLayout_16")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.efv_loadReportLine = QtWidgets.QLineEdit(self.groupBox_4)
        self.efv_loadReportLine.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.efv_loadReportLine.setReadOnly(True)
        self.efv_loadReportLine.setObjectName("efv_loadReportLine")
        self.verticalLayout_9.addWidget(self.efv_loadReportLine)
        self.efv_loadDataLine = QtWidgets.QLineEdit(self.groupBox_4)
        self.efv_loadDataLine.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.efv_loadDataLine.setReadOnly(True)
        self.efv_loadDataLine.setObjectName("efv_loadDataLine")
        self.verticalLayout_9.addWidget(self.efv_loadDataLine)
        self.horizontalLayout_9.addLayout(self.verticalLayout_9)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.efv_loadReportBtn = QtWidgets.QPushButton(self.groupBox_4)
        self.efv_loadReportBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.efv_loadReportBtn.setObjectName("efv_loadReportBtn")
        self.gridLayout.addWidget(self.efv_loadReportBtn, 0, 1, 1, 1)
        self.efv_loadBox = QtWidgets.QCheckBox(self.groupBox_4)
        self.efv_loadBox.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.efv_loadBox.setChecked(True)
        self.efv_loadBox.setObjectName("efv_loadBox")
        self.gridLayout.addWidget(self.efv_loadBox, 1, 1, 1, 1)
        self.efv_loadFolderBtn = QtWidgets.QPushButton(self.groupBox_4)
        self.efv_loadFolderBtn.setObjectName("efv_loadFolderBtn")
        self.gridLayout.addWidget(self.efv_loadFolderBtn, 0, 0, 1, 1)
        self.horizontalLayout_9.addLayout(self.gridLayout)
        self.verticalLayout_16.addLayout(self.horizontalLayout_9)
        spacerItem19 = QtWidgets.QSpacerItem(20, 75, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_16.addItem(spacerItem19)
        self.splitter = QtWidgets.QSplitter(self.splitter_2)
        self.splitter.setEnabled(True)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.layoutWidget = QtWidgets.QWidget(self.splitter)
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.efv_dataTable = QtWidgets.QTableView(self.layoutWidget)
        self.efv_dataTable.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.efv_dataTable.sizePolicy().hasHeightForWidth())
        self.efv_dataTable.setSizePolicy(sizePolicy)
        self.efv_dataTable.setMinimumSize(QtCore.QSize(10, 10))
        self.efv_dataTable.setMaximumSize(QtCore.QSize(1000000, 1000000))
        self.efv_dataTable.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.efv_dataTable.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked)
        self.efv_dataTable.setDragEnabled(True)
        self.efv_dataTable.setDragDropOverwriteMode(False)
        self.efv_dataTable.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.efv_dataTable.setDefaultDropAction(QtCore.Qt.MoveAction)
        self.efv_dataTable.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.efv_dataTable.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectItems)
        self.efv_dataTable.setSortingEnabled(True)
        self.efv_dataTable.setObjectName("efv_dataTable")
        self.efv_dataTable.horizontalHeader().setDefaultSectionSize(150)
        self.efv_dataTable.horizontalHeader().setMinimumSectionSize(110)
        self.efv_dataTable.horizontalHeader().setSortIndicatorShown(False)
        self.efv_dataTable.verticalHeader().setCascadingSectionResizes(False)
        self.efv_dataTable.verticalHeader().setMinimumSectionSize(10)
        self.efv_dataTable.verticalHeader().setStretchLastSection(False)
        self.verticalLayout_13.addWidget(self.efv_dataTable)
        self.verticalLayout_13.setStretch(0, 1)
        self.layoutWidget1 = QtWidgets.QWidget(self.splitter)
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.layoutWidget1)
        self.verticalLayout_14.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.efv_videoView = QtWidgets.QGraphicsView(self.layoutWidget1)
        self.efv_videoView.setObjectName("efv_videoView")
        self.verticalLayout_14.addWidget(self.efv_videoView)
        self.efv_videoSlider = QtWidgets.QSlider(self.layoutWidget1)
        self.efv_videoSlider.setOrientation(QtCore.Qt.Horizontal)
        self.efv_videoSlider.setObjectName("efv_videoSlider")
        self.verticalLayout_14.addWidget(self.efv_videoSlider)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.efv_prevFrameBtn = QtWidgets.QPushButton(self.layoutWidget1)
        self.efv_prevFrameBtn.setEnabled(False)
        self.efv_prevFrameBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.efv_prevFrameBtn.setAutoRepeat(True)
        self.efv_prevFrameBtn.setAutoRepeatDelay(150)
        self.efv_prevFrameBtn.setAutoRepeatInterval(0)
        self.efv_prevFrameBtn.setObjectName("efv_prevFrameBtn")
        self.horizontalLayout_10.addWidget(self.efv_prevFrameBtn)
        spacerItem20 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem20)
        self.efv_frameEdit = QtWidgets.QLineEdit(self.layoutWidget1)
        self.efv_frameEdit.setEnabled(False)
        self.efv_frameEdit.setMaximumSize(QtCore.QSize(60, 16777215))
        self.efv_frameEdit.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.efv_frameEdit.setText("")
        self.efv_frameEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.efv_frameEdit.setObjectName("efv_frameEdit")
        self.horizontalLayout_10.addWidget(self.efv_frameEdit)
        spacerItem21 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem21)
        self.efv_nextFrameBtn = QtWidgets.QPushButton(self.layoutWidget1)
        self.efv_nextFrameBtn.setEnabled(False)
        self.efv_nextFrameBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.efv_nextFrameBtn.setAutoRepeat(True)
        self.efv_nextFrameBtn.setAutoRepeatDelay(150)
        self.efv_nextFrameBtn.setAutoRepeatInterval(0)
        self.efv_nextFrameBtn.setObjectName("efv_nextFrameBtn")
        self.horizontalLayout_10.addWidget(self.efv_nextFrameBtn)
        self.horizontalLayout_10.setStretch(1, 1)
        self.horizontalLayout_10.setStretch(3, 1)
        self.verticalLayout_14.addLayout(self.horizontalLayout_10)
        self.verticalLayout_15.addWidget(self.splitter_2)
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        spacerItem22 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_11.addItem(spacerItem22)
        self.efv_prevEventBtn = QtWidgets.QPushButton(self.tool4)
        self.efv_prevEventBtn.setEnabled(False)
        self.efv_prevEventBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.efv_prevEventBtn.setObjectName("efv_prevEventBtn")
        self.horizontalLayout_11.addWidget(self.efv_prevEventBtn)
        self.efv_eventEdit = QtWidgets.QLineEdit(self.tool4)
        self.efv_eventEdit.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.efv_eventEdit.sizePolicy().hasHeightForWidth())
        self.efv_eventEdit.setSizePolicy(sizePolicy)
        self.efv_eventEdit.setMaximumSize(QtCore.QSize(35, 16777215))
        self.efv_eventEdit.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.efv_eventEdit.setText("")
        self.efv_eventEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.efv_eventEdit.setObjectName("efv_eventEdit")
        self.horizontalLayout_11.addWidget(self.efv_eventEdit)
        self.efv_eventLabel = QtWidgets.QLabel(self.tool4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.efv_eventLabel.sizePolicy().hasHeightForWidth())
        self.efv_eventLabel.setSizePolicy(sizePolicy)
        self.efv_eventLabel.setMinimumSize(QtCore.QSize(35, 0))
        self.efv_eventLabel.setMaximumSize(QtCore.QSize(35, 16777215))
        self.efv_eventLabel.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.efv_eventLabel.setObjectName("efv_eventLabel")
        self.horizontalLayout_11.addWidget(self.efv_eventLabel)
        self.efv_nextEventBtn = QtWidgets.QPushButton(self.tool4)
        self.efv_nextEventBtn.setEnabled(False)
        self.efv_nextEventBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.efv_nextEventBtn.setObjectName("efv_nextEventBtn")
        self.horizontalLayout_11.addWidget(self.efv_nextEventBtn)
        spacerItem23 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_11.addItem(spacerItem23)
        self.verticalLayout_15.addLayout(self.horizontalLayout_11)
        self.toolsStackWidget.addWidget(self.tool4)
        self.verticalLayout.addWidget(self.toolsStackWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 376, 21))
        self.menubar.setObjectName("menubar")
        self.menuMenu = QtWidgets.QMenu(self.menubar)
        self.menuMenu.setObjectName("menuMenu")
        self.menuToolSelect = QtWidgets.QMenu(self.menubar)
        self.menuToolSelect.setEnabled(False)
        self.menuToolSelect.setTearOffEnabled(False)
        self.menuToolSelect.setObjectName("menuToolSelect")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionEFsViewer = QtWidgets.QAction(MainWindow)
        self.actionEFsViewer.setCheckable(True)
        self.actionEFsViewer.setObjectName("actionEFsViewer")
        self.actionCloseProject = QtWidgets.QAction(MainWindow)
        self.actionCloseProject.setObjectName("actionCloseProject")
        self.actionEFs = QtWidgets.QAction(MainWindow)
        self.actionEFs.setCheckable(True)
        self.actionEFs.setObjectName("actionEFs")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionNewProject = QtWidgets.QAction(MainWindow)
        self.actionNewProject.setObjectName("actionNewProject")
        self.actionOpenProject = QtWidgets.QAction(MainWindow)
        self.actionOpenProject.setObjectName("actionOpenProject")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setEnabled(False)
        self.actionSave.setObjectName("actionSave")
        self.actionSettings = QtWidgets.QAction(MainWindow)
        self.actionSettings.setObjectName("actionSettings")
        self.actionFileFinder = QtWidgets.QAction(MainWindow)
        self.actionFileFinder.setCheckable(True)
        self.actionFileFinder.setObjectName("actionFileFinder")
        self.actionAutoResim = QtWidgets.QAction(MainWindow)
        self.actionAutoResim.setCheckable(True)
        self.actionAutoResim.setObjectName("actionAutoResim")
        self.efv_actionCompare = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icon/res/comp.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.efv_actionCompare.setIcon(icon1)
        self.efv_actionCompare.setObjectName("efv_actionCompare")
        self.menuMenu.addAction(self.actionNewProject)
        self.menuMenu.addAction(self.actionOpenProject)
        self.menuMenu.addAction(self.actionCloseProject)
        self.menuMenu.addSeparator()
        self.menuMenu.addAction(self.actionSave)
        self.menuMenu.addSeparator()
        self.menuMenu.addAction(self.actionSettings)
        self.menuMenu.addSeparator()
        self.menuMenu.addAction(self.actionExit)
        self.menuToolSelect.addAction(self.actionFileFinder)
        self.menuToolSelect.addAction(self.actionAutoResim)
        self.menuToolSelect.addAction(self.actionEFs)
        self.menuToolSelect.addAction(self.actionEFsViewer)
        self.menubar.addAction(self.menuMenu.menuAction())
        self.menubar.addAction(self.menuToolSelect.menuAction())
        self.toolBar.addAction(self.efv_actionCompare)
        self.toolBar.addSeparator()

        self.retranslateUi(MainWindow)
        self.toolsStackWidget.setCurrentIndex(0)
        self.ff_historyCheckBox.toggled['bool'].connect(self.ff_historyBox.setEnabled)
        self.ar_historyCheckBox.toggled['bool'].connect(self.ar_historySpinBox.setEnabled)
        self.ar_folderRadio.toggled['bool'].connect(self.ar_historyCheckBox.setDisabled)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Analyst ToolKit"))
        self.createProjectBtn.setStatusTip(_translate("MainWindow", "Create new project"))
        self.createProjectBtn.setText(_translate("MainWindow", "Create new project"))
        self.openProjectBtn.setStatusTip(_translate("MainWindow", "Open existing ToolKit project"))
        self.openProjectBtn.setText(_translate("MainWindow", "Open project"))
        self.noProjectBtn.setText(_translate("MainWindow", "Continue without project"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Root"))
        self.ff_rootBtn.setStatusTip(_translate("MainWindow", "Change root for recursive search"))
        self.ff_rootBtn.setText(_translate("MainWindow", "Change path"))
        self.groupBox_2.setTitle(_translate("MainWindow", "File names"))
        self.ff_logsEdit.setStatusTip(_translate("MainWindow", "Write file names without extensions"))
        self.ff_historyCheckBox.setStatusTip(_translate("MainWindow", "Search history logs for those listed above"))
        self.ff_historyCheckBox.setText(_translate("MainWindow", "Find history "))
        self.ff_historyBox.setStatusTip(_translate("MainWindow", "Number of history logs to search for"))
        self.groupBox.setTitle(_translate("MainWindow", "Output"))
        self.ff_outputRadioBtn_1.setStatusTip(_translate("MainWindow", "Create output report"))
        self.ff_outputRadioBtn_1.setText(_translate("MainWindow", "report txt"))
        self.ff_outputRadioBtn_2.setStatusTip(_translate("MainWindow", "Create output report as well as copy found files"))
        self.ff_outputRadioBtn_2.setText(_translate("MainWindow", "copy to folder"))
        self.ff_outputBtn.setStatusTip(_translate("MainWindow", "Change output destination path"))
        self.ff_outputBtn.setText(_translate("MainWindow", "Change path"))
        self.ff_searchBtn.setStatusTip(_translate("MainWindow", "Choose extensions and begin searching"))
        self.ff_searchBtn.setText(_translate("MainWindow", "Search"))
        self.groupBox_12.setTitle(_translate("MainWindow", "Load"))
        self.ar_exeBtn.setStatusTip(_translate("MainWindow", "Load path to resim exe file"))
        self.ar_exeBtn.setText(_translate("MainWindow", "Load resim"))
        self.ar_inputBtn.setStatusTip(_translate("MainWindow", "Load path to logs input"))
        self.ar_inputBtn.setText(_translate("MainWindow", "Load input"))
        self.ar_mmrCheckBox.setStatusTip(_translate("MainWindow", "Check files only for radar resim (dvl, mudp)"))
        self.ar_mmrCheckBox.setText(_translate("MainWindow", "MMR only"))
        self.ar_folderRadio.setStatusTip(_translate("MainWindow", "Input folder with logs"))
        self.ar_folderRadio.setText(_translate("MainWindow", "Folder"))
        self.ar_fileRadio.setStatusTip(_translate("MainWindow", "Input file with logs list"))
        self.ar_fileRadio.setText(_translate("MainWindow", "File"))
        self.groupBox_13.setTitle(_translate("MainWindow", "Files"))
        self.ar_historyCheckBox.setStatusTip(_translate("MainWindow", "Add history logs to resim list"))
        self.ar_historyCheckBox.setText(_translate("MainWindow", "Find history "))
        self.ar_historySpinBox.setStatusTip(_translate("MainWindow", "Number of history logs to resim"))
        self.groupBox_14.setTitle(_translate("MainWindow", "Params"))
        self.ar_paramsEdit.setStatusTip(_translate("MainWindow", "Resim options flags"))
        self.ar_paramsEdit.setText(_translate("MainWindow", "-visopt -minout -endopt"))
        self.ar_outDirBox.setStatusTip(_translate("MainWindow", "Save resim output to specific folder"))
        self.ar_outDirBox.setText(_translate("MainWindow", "-altdir"))
        self.ar_runBtn.setStatusTip(_translate("MainWindow", "Run resim on listed logs"))
        self.ar_runBtn.setText(_translate("MainWindow", "Run resim"))
        self.groupBox_15.setTitle(_translate("MainWindow", "Load"))
        self.ef_inputBtn.setStatusTip(_translate("MainWindow", "Load path to mats input"))
        self.ef_inputBtn.setText(_translate("MainWindow", "Load input"))
        self.ef_folderRadio.setStatusTip(_translate("MainWindow", "Input folder with mats"))
        self.ef_folderRadio.setText(_translate("MainWindow", "Folder"))
        self.ef_fileRadio.setStatusTip(_translate("MainWindow", "Input file with mats list"))
        self.ef_fileRadio.setText(_translate("MainWindow", "File"))
        self.groupBox_16.setTitle(_translate("MainWindow", "Files"))
        self.ef_configBtn.setStatusTip(_translate("MainWindow", "Configurate efs"))
        self.ef_configBtn.setText(_translate("MainWindow", "Config"))
        self.ef_runBtn.setStatusTip(_translate("MainWindow", "Run resim on listed logs"))
        self.ef_runBtn.setText(_translate("MainWindow", "Run efs"))
        self.groupBox_4.setTitle(_translate("MainWindow", "Load file"))
        self.efv_loadReportBtn.setStatusTip(_translate("MainWindow", "Load report .csv file from efs along with mat/tavi input folder"))
        self.efv_loadReportBtn.setText(_translate("MainWindow", "Load EF report"))
        self.efv_loadBox.setStatusTip(_translate("MainWindow", "Load mat with only mudp structure"))
        self.efv_loadBox.setText(_translate("MainWindow", "mudp only"))
        self.efv_loadFolderBtn.setText(_translate("MainWindow", "Load logs folder"))
        self.efv_prevFrameBtn.setStatusTip(_translate("MainWindow", "Move to previouse frame in current event (Left, Ctrl+left)"))
        self.efv_prevFrameBtn.setText(_translate("MainWindow", "Prev frame"))
        self.efv_prevFrameBtn.setShortcut(_translate("MainWindow", "Left"))
        self.efv_frameEdit.setStatusTip(_translate("MainWindow", "Move to specified frame in current event"))
        self.efv_nextFrameBtn.setStatusTip(_translate("MainWindow", "Move to next frame in current event (Right, Ctrl+Right)"))
        self.efv_nextFrameBtn.setText(_translate("MainWindow", "Next frame"))
        self.efv_nextFrameBtn.setShortcut(_translate("MainWindow", "Right"))
        self.efv_prevEventBtn.setStatusTip(_translate("MainWindow", "Load previouse event (Shift+Left)"))
        self.efv_prevEventBtn.setText(_translate("MainWindow", "Prev event"))
        self.efv_prevEventBtn.setShortcut(_translate("MainWindow", "Shift+Left"))
        self.efv_eventEdit.setStatusTip(_translate("MainWindow", "Load specified event"))
        self.efv_eventLabel.setStatusTip(_translate("MainWindow", "Numbers of events in loaded report"))
        self.efv_eventLabel.setText(_translate("MainWindow", "/"))
        self.efv_nextEventBtn.setStatusTip(_translate("MainWindow", "Load next event (Shift+Right)"))
        self.efv_nextEventBtn.setText(_translate("MainWindow", "Next event"))
        self.efv_nextEventBtn.setShortcut(_translate("MainWindow", "Shift+Right"))
        self.menuMenu.setTitle(_translate("MainWindow", "Menu"))
        self.menuToolSelect.setTitle(_translate("MainWindow", "Tool Select"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionEFsViewer.setText(_translate("MainWindow", "EF Viewer"))
        self.actionEFsViewer.setStatusTip(_translate("MainWindow", "Viewing logs"))
        self.actionCloseProject.setText(_translate("MainWindow", "Close project"))
        self.actionCloseProject.setStatusTip(_translate("MainWindow", "Save and close current project"))
        self.actionEFs.setText(_translate("MainWindow", "Event Finders"))
        self.actionEFs.setStatusTip(_translate("MainWindow", "Running EFs"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setStatusTip(_translate("MainWindow", "Exit application"))
        self.actionNewProject.setText(_translate("MainWindow", "New project"))
        self.actionNewProject.setToolTip(_translate("MainWindow", "New project"))
        self.actionNewProject.setStatusTip(_translate("MainWindow", "Create new project"))
        self.actionNewProject.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionOpenProject.setText(_translate("MainWindow", "Open project"))
        self.actionOpenProject.setToolTip(_translate("MainWindow", "Open project"))
        self.actionOpenProject.setStatusTip(_translate("MainWindow", "Open existing ToolKit project"))
        self.actionOpenProject.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setStatusTip(_translate("MainWindow", "Save current ToolKit project"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSettings.setText(_translate("MainWindow", "Settings"))
        self.actionSettings.setStatusTip(_translate("MainWindow", "Open settings window"))
        self.actionFileFinder.setText(_translate("MainWindow", "File Finder"))
        self.actionFileFinder.setStatusTip(_translate("MainWindow", "Search tool for finding files"))
        self.actionAutoResim.setText(_translate("MainWindow", "Auto Resim"))
        self.actionAutoResim.setStatusTip(_translate("MainWindow", "Automated resim tool"))
        self.efv_actionCompare.setText(_translate("MainWindow", "Compare"))
        self.efv_actionCompare.setToolTip(_translate("MainWindow", "Compare data between files"))
        self.efv_actionCompare.setShortcut(_translate("MainWindow", "Ctrl+N"))

from uis import rc_rc
